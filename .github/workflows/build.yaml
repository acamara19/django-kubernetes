name: Build Docker Container & Push to AWS ECR Registry

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test_django_job:
    uses: acamara19/django-kubernetes/.github/workflows/test-django.yaml@main
  build:
    runs-on: ubuntu-latest
    needs: [test_django_job]

    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        working-directory: ./web
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
          IMAGE_TAG: ${GITHUB_SHA::5}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: K8s cluster kubeconfig file with/ short-lived creds
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.CLUSTER_NAME }}

      - name: Update deployment secrets
        run: |
          cat << EOF >> web/.env.prod
          AWS_REGION=${{ secrets.AWS_REGION }}  
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_SUERPUSER_EMAIL=${{ secrets.DJANGO_SUERPUSER_EMAIL }}
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          ENV_ALLOWED_HOST=${{ secrets.ENV_ALLOWED_HOST }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          EOF
          kubectl delete secret django-k8s-web-prod-env
          kubectl create secret generic django-k8s-web-prod-env --from-env-file=web/.env.prod

      - name: Update Deployment image
        run: |
          kubectl set image deployment/django-k8s-web-deployment django-k8s-web=${{ secrets.AWS_ECR_REPO_URI }}:${GITHUB_SHA::5}
      
      - name: Wait for rollout to finish
        run: |
          kubectl rollout status deployment/django-k8s-web-deployment
      
      - name: Post-build Django Commands - Migrate / Collectstatic
        run: |
          export SINGLE_POD_NAME=$(kubectl get pod -l app=django-k8s-web-deployment -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -it $SINGLE_POD_NAME -- bash /app/migrate.sh
          kubectl exec -it $SINGLE_POD_NAME -- bash /app/collectstatic.sh