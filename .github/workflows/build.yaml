name: Build Docker Container & Push to AWS ECR Registry

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test_django_job:
    uses: acamara19/django-kubernetes/.github/workflows/test-django.yaml@main
  build:
    runs-on: ubuntu-latest
    needs: [test_django_job]

    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::049396975519:role/github-actions-role-oidc
          aws-region: us-east-1

      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: abhilash1in/aws-secrets-manager-action@v2.1.0
        with:
          secrets: |
            django/env/prod/*
          parse-json: true

      - name: Check if env variable is set after fetching secrets
        run: if [ -z ${POSTGRES_DB+x} ]; then echo "POSTGRES_DB is unset"; else echo "POSTGRES_DB is set to '$POSTGRES_DB'"; fi

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        working-directory: ./web
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ AWS_ECR_REPO }}
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: K8s cluster kubeconfig file with/ short-lived creds
        run: |
          aws eks --region ${AWS_REGION} update-kubeconfig --name ${CLUSTER_NAME}

      - name: Update deployment secrets
        run: |
          cat << EOF >> web/.env.prod
          AWS_REGION=${AWS_REGION}  
          ROLE_TO_ASSUME=${ROLE_TO_ASSUME}
          DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
          DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
          DJANGO_SUERPUSER_EMAIL=${DJANGO_SUERPUSER_EMAIL}
          DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
          ENV_ALLOWED_HOST=${ENV_ALLOWED_HOST}
          POSTGRES_DB=${POSTGRES_DB}
          POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          POSTGRES_USER=${POSTGRES_USER}
          POSTGRES_HOST=${POSTGRES_HOST}
          POSTGRES_PORT=${POSTGRES_PORT}
          EOF
          kubectl delete secret django-k8s-web-prod-env
          kubectl create secret generic django-k8s-web-prod-env --from-env-file=web/.env.prod

      - name: Update Deployment image
        run: |
          kubectl set image deployment/django-k8s-web-deployment django-k8s-web=049396975519.dkr.ecr.us-east-1.amazonaws.com/django-k8s-web:${GITHUB_SHA::5}
      
      - name: Wait for rollout to finish
        run: |
          kubectl rollout status deployment/django-k8s-web-deployment
      
      - name: Post-build Django Commands - Migrate / Collectstatic
        run: |
          export SINGLE_POD_NAME=$(kubectl get pod -l app=django-k8s-web-deployment -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -it $SINGLE_POD_NAME -- bash /app/migrate.sh
          kubectl exec -it $SINGLE_POD_NAME -- bash /app/collectstatic.sh